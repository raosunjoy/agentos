# AgentOS Development Environment Dockerfile
FROM ubuntu:22.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Set up basic environment
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Basic tools
    curl wget git git-lfs unzip zip \
    build-essential pkg-config \
    # Python development
    python3 python3-pip python3-venv python3-dev \
    # Node.js and npm
    nodejs npm \
    # Java development
    openjdk-11-jdk \
    # Android development
    android-sdk-platform-tools \
    # Audio processing
    libasound2-dev portaudio19-dev \
    # Graphics and UI
    libgl1-mesa-dev libglu1-mesa-dev \
    # Networking
    net-tools iputils-ping \
    # Development tools
    vim nano htop tree \
    # Security tools
    gnupg2 \
    && rm -rf /var/lib/apt/lists/*

# Set up Android SDK environment
ENV ANDROID_HOME=/opt/android-sdk
ENV ANDROID_SDK_ROOT=/opt/android-sdk
ENV PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools

# Create Android SDK directory
RUN mkdir -p ${ANDROID_HOME}

# Install Android SDK Command Line Tools
RUN wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O /tmp/cmdline-tools.zip \
    && unzip -q /tmp/cmdline-tools.zip -d ${ANDROID_HOME} \
    && mv ${ANDROID_HOME}/cmdline-tools ${ANDROID_HOME}/latest \
    && mkdir -p ${ANDROID_HOME}/cmdline-tools \
    && mv ${ANDROID_HOME}/latest ${ANDROID_HOME}/cmdline-tools/ \
    && rm /tmp/cmdline-tools.zip

# Add cmdline-tools to PATH
ENV PATH=${PATH}:${ANDROID_HOME}/cmdline-tools/latest/bin

# Accept Android SDK licenses
RUN yes | sdkmanager --licenses

# Install essential Android SDK components
RUN sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2" \
    "system-images;android-33;google_apis;x86_64" \
    "emulator"

# Install Python packages
COPY requirements-dev.txt /tmp/requirements-dev.txt
RUN pip3 install --no-cache-dir -r /tmp/requirements-dev.txt

# Install Node.js packages globally
RUN npm install -g \
    @angular/cli \
    typescript \
    ts-node \
    eslint \
    prettier \
    @typescript-eslint/parser \
    @typescript-eslint/eslint-plugin

# Set up workspace
WORKDIR /workspace

# Create development user
RUN useradd -m -s /bin/bash developer \
    && usermod -aG sudo developer \
    && echo "developer ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Switch to development user
USER developer

# Set up Git configuration
RUN git config --global user.name "AgentOS Developer" \
    && git config --global user.email "developer@agentos.org" \
    && git config --global init.defaultBranch main

# Install Git LFS
RUN git lfs install

# Create development directories
RUN mkdir -p /home/developer/{.cache,.gradle,.android}

# Set environment variables for development
ENV HOME=/home/developer
ENV USER=developer

# Expose ports for development servers
EXPOSE 3000 8080 5037

# Default command
CMD ["/bin/bash"]